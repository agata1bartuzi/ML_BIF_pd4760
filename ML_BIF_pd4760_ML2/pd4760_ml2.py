# -*- coding: utf-8 -*-
"""pd4760_ML2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iibUMLOEsB2GtRntjluefbzJtUNgfPTL
"""

# Importowanie bibliotek
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import accuracy_score, classification_report
from sklearn.ensemble import RandomForestClassifier
import matplotlib.pyplot as plt
from sklearn.metrics import confusion_matrix, ConfusionMatrixDisplay

# Wczytywanie danych

data = {
    'TP53_expr': [2.1, 8.5, 1.8, 6.2, 7.9, 3.1, 9.2, 2.8],
    'BRCA1_expr': [3.4, 7.2, 2.5, 6.1, 6.8, 4.0, 7.9, 3.9],
    'TF_motifs': [2, 6, 1, 4, 5, 2, 6, 3],
    'KRAS':   [1.2, 7.1, 0.9, 6.8, 1.5, 5.5, 1.0, 6.3],
    'Cancer_status': [0, 1, 0, 1, 1, 0, 1, 0]
}

df = pd.DataFrame(data)
print(df)

X = df[['TP53_expr', 'BRCA1_expr', 'TF_motifs', 'KRAS']]
y = df['Cancer_status']

# PodziaÅ‚ danych
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25, random_state=42, stratify=y)

# Drzewo decyzyjne

# Trening drzewa
tree_model = DecisionTreeClassifier(random_state=42)
tree_model.fit(X_train, y_train)

# Predykcja
y_pred_tree = tree_model.predict(X_test)

# Ocena
print("Drzewo decyzyjne -\nAccuracy:", accuracy_score(y_test, y_pred_tree))
print("Classification Report:\n", classification_report(y_test, y_pred_tree))

# Wizualizacja
plt.figure(figsize=(10,6))
plot_tree(tree_model, feature_names=X.columns, class_names=['Healthy', 'Cancer'], filled=True)
plt.title("Drzewo decyzyjne")
plt.show()

'''
Interpretacja wynikow:
Wspolczynniki oceny pokazuja,ze model dziala idealnie na danych testowych.
Accuracy = 1 -> 100% poprawnych predykcji;
Precision = 1 -> Wszystkie osoby zakwalifikowane jako chore, faktycznie byly chore;
Recall = 1 -> Model wykryl wszystkie osoby chore;
F1-score = 1 -> idealna rownowaga.

Model drzewa decyzyjnego za przewazajacy uznal poziom ekspresji TP53, a jego wysokosc dajaca najlepszy rozdzial na 4.5.
Wartosc Gini index = 0.0 na poziomie galezi swiadczy o czystej separacji 6 probek treningowych na pacjentow Zdrowych i Chorych
(po 3 pacjentow w kazdej grupie).
O czystej separacji probek swiadczy rowniez wskaznik value = [3, 0] w galezi Healthy, ktory mowi o tym, ze w tej grupie wszystkie
3 probki naleza do klasy 0 (pacjenci zdrowi) i zadna do klasy 1 (pacjenci chorzy). Analogicznie wskaznik ten przedstwia sie w grupie
Cancer.
Na podstawie zaprezentowanych wynikow analizy stwierdzic nalezy, ze model rozpoznal wiodacy czynnik, wg ktorego prawidlowo rozdziela
dane testowe na wytyczone mu dwie grupy.



'''